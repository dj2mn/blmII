/**
 * @file
 * @brief TriggeredCounter
 * This sub-composition implements a triggered counter that alternates between incrementing from 0 to 1 and decrementing 1 back to 0.  
 *
 * It is primarly designed for creating smooth, timed crossfades by connecting its `Value` output to the `Foreground Opacity` input of the `Blend Images` node. 
 *
 * Connect a timer such as `Fire on Display Refresh` to the `Time` port.  
 *
 * Sending an event to the `Trigger` port starts the timer. 
 *
 * The value at the `Duration` port specifies the number of seconds the counter will take to reach its target, at which point an event is sent from the `Finished` port.
 *
 * `Finished0` and `Finished1` fire an event at the end of a decrement or increment count respectively.  (`Finished` is simply those two merged together. )
 *
 * @author [dj2mn](https://vuo.org/user/45381)
 * @createdInVuoVersion 2.4.3
 * @lastSavedInVuoVersion 2.4.4
 * @keywords Event, Counter, Timer
 * @copyright Copyright Â© 2024 [dj2mn](https://vuo.org/user/45381)
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
AllowPeriodicEvents [type="vuo.time.allowPeriodic" version="1.0.0" label="Allow Periodic Events|<refresh>refresh\l|<time>time\l|<period>period\l|<periodicTime>periodicTime\r" pos="150,-465" _period="0.02"];
AreEqual [type="vuo.data.areEqual.VuoReal" version="1.0.0" label="Equals 0|<refresh>refresh\l|<values>values\l|<equal>equal\r" pos="990,-480"];
AreEqual2 [type="vuo.data.areEqual.VuoReal" version="1.0.0" label="Equals 1|<refresh>refresh\l|<values>values\l|<equal>equal\r" pos="990,-405"];
Became02 [type="vuo.event.becameTrue" version="1.0.0" label="Became 1|<refresh>refresh\l|<value>value\l|<becameTrue>becameTrue\r" pos="1140,-405"];
BecameTrue [type="vuo.event.becameTrue" version="1.0.0" label="Became 0|<refresh>refresh\l|<value>value\l|<becameTrue>becameTrue\r" pos="1140,-480"];
Calculate [type="vuo.math.calculate" version="1.0.0" label="CalculateIncDecValue|<refresh>refresh\l|<expression>expression\l|<values>values\l|<result>result\r" pos="150,-540" _expression="\{\"expressions\":[\"1 \\/ ( A * 50 )\"],\"inputVariables\":[\"A\"],\"outputVariables\":[\"result\"]\}"];
CountWithinRange [type="vuo.math.countWithinRange.VuoReal" version="1.0.2" label="Count within Range|<refresh>refresh\l|<increment>increment\l|<decrement>decrement\l|<setCount>setCount\l|<minimum>minimum\l|<maximum>maximum\l|<wrapMode>wrapMode\l|<count>count\r" pos="720,-540" _minimum="0.0" _maximum="1.0" _wrapMode="\"saturate\""];
MakeDictionary [type="vuo.dictionary.make.VuoText.VuoReal" version="1.0.0" label="Make Dictionary|<refresh>refresh\l|<keys>keys\l|<values>values\l|<dictionary>dictionary\r" pos="-240,450"];
MakeList [type="vuo.list.make.1.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="-240,450" _1="\"A\""];
MakeList2 [type="vuo.list.make.1.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="117,-514"];
MakeList3 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="957,-469"];
MakeList5 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="957,-394" _2="1.0"];
SelectEventOutput [type="vuo.select.out.boolean.event" version="2.0.0" label="Select Event Output|<refresh>refresh\l|<which>which\l|<in>in\l|<falseOption>falseOption\r|<trueOption>trueOption\r" pos="375,-450"];
SelectInput3 [type="vuo.select.in.boolean.VuoReal" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="390,-330" _falseOption="1.0" _trueOption="0.0"];
Toggle [type="vuo.logic.toggle" version="1.0.0" label="Toggle|<refresh>refresh\l|<toggle>toggle\l|<value>value\r" pos="-15,-450" _toggle_manuallyFirable="yes"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<Time>Time\r|<Duration>Duration\r|<Trigger>Trigger\r" _Time_type="VuoReal" _Duration_type="VuoReal" _Duration="10.0" _Trigger_type="event"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<Value>Value\l|<Finished>Finished\l|<Finished0>Finished0\l|<Finished1>Finished1\l" _Value_type="VuoReal" _Finished_type="event" _Finished0_type="event" _Finished1_type="event"];

Comment [type="vuo.comment" label="\"1\\/50th (0.02) of a second is our nominal \\\"frame\\\" rate i.e. \ how often we inc\\/dec the counter value. \ \\n\\nthus `1 \\/ (fadetime*50)` is the number we need to inc\\/dec the counter by in order to reach the target in the given time. \"" pos="30,-405" width="240" height="163" fillcolor="yellow"];

AllowPeriodicEvents:periodicTime -> SelectEventOutput:in;
AreEqual2:equal -> Became02:value;
AreEqual:equal -> BecameTrue:value;
Became02:becameTrue -> PublishedOutputs:Finished1;
Became02:becameTrue -> PublishedOutputs:Finished;
BecameTrue:becameTrue -> PublishedOutputs:Finished0;
BecameTrue:becameTrue -> PublishedOutputs:Finished;
Calculate:result -> CountWithinRange:decrement;
Calculate:result -> CountWithinRange:increment;
CountWithinRange:count -> MakeList3:1;
CountWithinRange:count -> MakeList5:1;
CountWithinRange:count -> PublishedOutputs:Value;
MakeDictionary:dictionary -> Calculate:values;
MakeList2:list -> MakeDictionary:values;
MakeList3:list -> AreEqual:values;
MakeList5:list -> AreEqual2:values;
MakeList:list -> MakeDictionary:keys;
PublishedInputs:Duration -> MakeList2:1;
PublishedInputs:Time -> AllowPeriodicEvents:time;
PublishedInputs:Trigger -> Calculate:expression;
PublishedInputs:Trigger -> Toggle:toggle;
SelectEventOutput:falseOption -> CountWithinRange:decrement;
SelectEventOutput:trueOption -> CountWithinRange:increment;
SelectInput3:out -> CountWithinRange:setCount;
Toggle:value -> SelectEventOutput:which [style=invis];
Toggle:value -> SelectInput3:which [style=invis];
}
